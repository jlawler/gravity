#!/usr/bin/env ruby
require 'pp'
require 'rubygems'
require 'gosu'
require 'chipmunk'

$:.unshift "./lib"
require 'gosu_circle'
require 'constants'
require 'frame'
require 'planetoid'
require 'config_parser'

GravityConf = GravityConfigParser.parse_file  ARGV.first || 'config.yml'


SUN=GravityConf.bodies['sun']
EARTH=GravityConf.bodies['earth']


class ChipmunkIntegration < ( Gosu::Window)
  def initialize
    super Frame.width, Frame.height
    self.caption = "Gosu & Chipmunk Integration Demo"
    Frame.window = self

    #@img = Gosu::Image.new(self, Circle.new(50, 255, 0, 0), false)
  end
  def draw
    unless GravityConf.paused
      Frame.frame += 1
      timescale = 0.5 #0.1 
      EARTH.add_gravity_from(SUN, timescale)
      SUN.add_gravity_from(EARTH, timescale)
      EARTH.update_pos timescale
      SUN.update_pos timescale
      STDERR.puts SUN.dist_to EARTH  if Frame.frame%10 == 0
      #STDERR.puts "SUN POS #{SUN.pos}"
      #STDERR.puts "V #{EARTH.vel}"
      #STDERR.puts "V MAG #{Frame.mag_of_vector(EARTH.vel)}"
      puts Frame.frame if Frame.frame%10 == 0
    end
    SUN.draw
    EARTH.draw
		#draw_circle(0, 0, 200)
    #@img.draw 0, 0, 0
  end
  def button_down(id)
    if id==Gosu::KB_Q
      Kernel.exit!
    end
    puts id
    GravityConf.paused = !GravityConf.paused  
  end
end

ChipmunkIntegration.new.show
