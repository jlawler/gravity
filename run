#!/usr/bin/env ruby
require 'pp'
require 'rubygems'
require 'gosu'
require 'chipmunk'

$:.unshift "./lib"
require 'gosu_circle'
require 'constants'
require 'frame'
require 'planetoid'
require 'config_parser'

GravityConf = GravityConfigParser.parse_file  ARGV.first || 'config.yml'


SUN=GravityConf.bodies['sun']
EARTH=GravityConf.bodies['earth']
=begin
SUN = Planetoid.new(
  mass: 1.989*(10**30),
  pos: [0,0,0],
  vel: [0,0,0],
  radius: 25
)


EARTH=Planetoid.new(
  mass: 5.972 * (10**24),
  pos: [0.186, 0.9615,0.000155],
  vel: [0.5,0,0],
  radius: 5,
  color: [0, 0, 255]
)
=end

$frame=0
class ChipmunkIntegration < ( Gosu::Window)
  def initialize
    super Frame.width, Frame.height
    self.caption = "Gosu & Chipmunk Integration Demo"
    Frame.window = self

    #@img = Gosu::Image.new(self, Circle.new(50, 255, 0, 0), false)
  end
  def draw
    $frame +=1
    timescale = 0.5 #0.1 
    EARTH.add_gravity_from(SUN, timescale)
    SUN.add_gravity_from(EARTH, timescale)
    EARTH.update_pos timescale
    SUN.update_pos timescale
    STDERR.puts SUN.dist_to EARTH
    #STDERR.puts "SUN POS #{SUN.pos}"
    #STDERR.puts "V #{EARTH.vel}"
    #STDERR.puts "V MAG #{Frame.mag_of_vector(EARTH.vel)}"
    SUN.draw
    EARTH.draw
    puts $frame if $frame%10 == 0
		#draw_circle(0, 0, 200)
    #@img.draw 0, 0, 0
  end
end

ChipmunkIntegration.new.show
